// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WineRack.Domain;

#nullable disable

namespace WineRack.Domain.Migrations
{
    [DbContext(typeof(WineRackContext))]
    [Migration("20221005234811_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WineRack.Domain.Models.Bottle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BottleNoteId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfBottles")
                        .HasColumnType("int");

                    b.Property<float>("PurchasePrice")
                        .HasColumnType("real");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("Vintage")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int>("WineryId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Bottle");

                    b.HasIndex("BottleNoteId");

                    b.HasIndex("RegionId");

                    b.HasIndex("WineryId");

                    b.ToTable("Bottles");
                });

            modelBuilder.Entity("WineRack.Domain.Models.BottleNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_BottleNote");

                    b.ToTable("BottleNotes");
                });

            modelBuilder.Entity("WineRack.Domain.Models.BottleVarietal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BottleId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<float>("Percentage")
                        .HasColumnType("real");

                    b.Property<int>("VarietalId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_BottleVarietal");

                    b.HasIndex("BottleId");

                    b.HasIndex("VarietalId");

                    b.ToTable("BottleVarietals");
                });

            modelBuilder.Entity("WineRack.Domain.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 43,
                            CountryName = "USA"
                        },
                        new
                        {
                            Id = 44,
                            CountryName = "Spain"
                        },
                        new
                        {
                            Id = 45,
                            CountryName = "France"
                        },
                        new
                        {
                            Id = 46,
                            CountryName = "Italy"
                        },
                        new
                        {
                            Id = 47,
                            CountryName = "Germany"
                        },
                        new
                        {
                            Id = 48,
                            CountryName = "South Africa"
                        },
                        new
                        {
                            Id = 49,
                            CountryName = "Australia"
                        },
                        new
                        {
                            Id = 50,
                            CountryName = "Chile"
                        },
                        new
                        {
                            Id = 51,
                            CountryName = "Brazil"
                        });
                });

            modelBuilder.Entity("WineRack.Domain.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_RegionId");

                    b.HasIndex("CountryId");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("WineRack.Domain.Models.TastingNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BottleId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.HasKey("Id")
                        .HasName("PK_TastingNoteId");

                    b.HasIndex("BottleId");

                    b.ToTable("TastingNotes");
                });

            modelBuilder.Entity("WineRack.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK_UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WineRack.Domain.Models.Varietal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("GrapeVarietal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_Varietals");

                    b.ToTable("Varietals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GrapeVarietal = "Zinfandel"
                        },
                        new
                        {
                            Id = 2,
                            GrapeVarietal = "Cabernet Sauvignon"
                        },
                        new
                        {
                            Id = 3,
                            GrapeVarietal = "Merlot"
                        },
                        new
                        {
                            Id = 4,
                            GrapeVarietal = "Pinot Noir"
                        },
                        new
                        {
                            Id = 5,
                            GrapeVarietal = "Pinot Grigio"
                        },
                        new
                        {
                            Id = 6,
                            GrapeVarietal = "Sauvignon Blanc"
                        },
                        new
                        {
                            Id = 7,
                            GrapeVarietal = "Chardonnay"
                        },
                        new
                        {
                            Id = 8,
                            GrapeVarietal = "Malbec"
                        },
                        new
                        {
                            Id = 9,
                            GrapeVarietal = "Carignan(e)"
                        },
                        new
                        {
                            Id = 10,
                            GrapeVarietal = "Petit Verdot"
                        },
                        new
                        {
                            Id = 11,
                            GrapeVarietal = "Alicante"
                        },
                        new
                        {
                            Id = 12,
                            GrapeVarietal = "Baco Noir"
                        },
                        new
                        {
                            Id = 13,
                            GrapeVarietal = "Barbera"
                        },
                        new
                        {
                            Id = 14,
                            GrapeVarietal = "Cabernet Franc"
                        },
                        new
                        {
                            Id = 15,
                            GrapeVarietal = "Cinsault"
                        },
                        new
                        {
                            Id = 16,
                            GrapeVarietal = "de Chaunac"
                        },
                        new
                        {
                            Id = 17,
                            GrapeVarietal = "Dolcetto"
                        },
                        new
                        {
                            Id = 18,
                            GrapeVarietal = "Freisa"
                        },
                        new
                        {
                            Id = 19,
                            GrapeVarietal = "Gamay"
                        },
                        new
                        {
                            Id = 20,
                            GrapeVarietal = "Gamay Beaujolais"
                        },
                        new
                        {
                            Id = 21,
                            GrapeVarietal = "Grenache"
                        },
                        new
                        {
                            Id = 22,
                            GrapeVarietal = "Grignolino"
                        },
                        new
                        {
                            Id = 23,
                            GrapeVarietal = "Kadarka"
                        },
                        new
                        {
                            Id = 24,
                            GrapeVarietal = "Lambrusco"
                        },
                        new
                        {
                            Id = 25,
                            GrapeVarietal = "Marechal Foch"
                        },
                        new
                        {
                            Id = 26,
                            GrapeVarietal = "Mourvedre"
                        },
                        new
                        {
                            Id = 27,
                            GrapeVarietal = "Nebbiolo"
                        },
                        new
                        {
                            Id = 28,
                            GrapeVarietal = "Petite Sirah"
                        },
                        new
                        {
                            Id = 29,
                            GrapeVarietal = "Pinot Meunier"
                        },
                        new
                        {
                            Id = 30,
                            GrapeVarietal = "Pinotage"
                        },
                        new
                        {
                            Id = 31,
                            GrapeVarietal = "Primitivo"
                        },
                        new
                        {
                            Id = 32,
                            GrapeVarietal = "Ruby Cabarnet"
                        },
                        new
                        {
                            Id = 33,
                            GrapeVarietal = "Sangiovese"
                        },
                        new
                        {
                            Id = 34,
                            GrapeVarietal = "Syrah"
                        },
                        new
                        {
                            Id = 35,
                            GrapeVarietal = "Tempranillo"
                        },
                        new
                        {
                            Id = 36,
                            GrapeVarietal = "Touriga Nacional"
                        },
                        new
                        {
                            Id = 37,
                            GrapeVarietal = "Xynomavro"
                        },
                        new
                        {
                            Id = 38,
                            GrapeVarietal = "Aglianco"
                        },
                        new
                        {
                            Id = 39,
                            GrapeVarietal = "Semillon"
                        },
                        new
                        {
                            Id = 40,
                            GrapeVarietal = "Moscato"
                        },
                        new
                        {
                            Id = 41,
                            GrapeVarietal = "Gewurztraminer"
                        },
                        new
                        {
                            Id = 42,
                            GrapeVarietal = "Riesling"
                        });
                });

            modelBuilder.Entity("WineRack.Domain.Models.Winery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_Winery");

                    b.HasIndex("CountryId");

                    b.ToTable("Wineries");
                });

            modelBuilder.Entity("WineRack.Domain.Models.Bottle", b =>
                {
                    b.HasOne("WineRack.Domain.Models.BottleNote", "BottleNote")
                        .WithMany()
                        .HasForeignKey("BottleNoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WineRack.Domain.Models.Region", "Region")
                        .WithMany("Bottles")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_RegionBottle");

                    b.HasOne("WineRack.Domain.Models.Winery", "Winery")
                        .WithMany("Bottles")
                        .HasForeignKey("WineryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_WineryBottle");

                    b.Navigation("BottleNote");

                    b.Navigation("Region");

                    b.Navigation("Winery");
                });

            modelBuilder.Entity("WineRack.Domain.Models.BottleVarietal", b =>
                {
                    b.HasOne("WineRack.Domain.Models.Bottle", "Bottle")
                        .WithMany("BottleVarietalList")
                        .HasForeignKey("BottleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WineRack.Domain.Models.Varietal", "Varietal")
                        .WithMany()
                        .HasForeignKey("VarietalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bottle");

                    b.Navigation("Varietal");
                });

            modelBuilder.Entity("WineRack.Domain.Models.Region", b =>
                {
                    b.HasOne("WineRack.Domain.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("WineRack.Domain.Models.TastingNote", b =>
                {
                    b.HasOne("WineRack.Domain.Models.Bottle", "Bottle")
                        .WithMany("TastingNoteList")
                        .HasForeignKey("BottleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bottle");
                });

            modelBuilder.Entity("WineRack.Domain.Models.Winery", b =>
                {
                    b.HasOne("WineRack.Domain.Models.Country", "Country")
                        .WithMany("Wineries")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("WineRack.Domain.Models.Bottle", b =>
                {
                    b.Navigation("BottleVarietalList");

                    b.Navigation("TastingNoteList");
                });

            modelBuilder.Entity("WineRack.Domain.Models.Country", b =>
                {
                    b.Navigation("Wineries");
                });

            modelBuilder.Entity("WineRack.Domain.Models.Region", b =>
                {
                    b.Navigation("Bottles");
                });

            modelBuilder.Entity("WineRack.Domain.Models.Winery", b =>
                {
                    b.Navigation("Bottles");
                });
#pragma warning restore 612, 618
        }
    }
}
